<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <unity>
    <!-- Define Assemblies-->
    <assembly name="WebAutomation.Core" />
    <assembly name="QualityExcites.Tests" />

    <!-- Define Namespaces-->
    <namespace name="System" />
    <namespace name="WebAutomation.Core" />
    <namespace name="WebAutomation.Core.Logger" />
    <namespace name="WebAutomation.Core.WebObjects.Common" />
    <namespace name="WebAutomation.Core.WebObjects.Common.Activities" />
    <namespace name="WebAutomation.Core.WebObjects.Manager" />
    <namespace name="WebAutomation.Core.WebObjects.WebComponents" />
    <namespace name="WebAutomation.Core.WebObjects.WebComponents.Actions" />
    <namespace name="WebAutomation.Core.WebObjects.WebComponents.Activities" />
    <namespace name="WebAutomation.Core.WebObjects.WebComponents.Attributes" />
    <namespace name="WebAutomation.Core.WebObjects.WebComponents.States" />
    <namespace name="WebAutomation.Core.WebObjects.WebComponents.Value" />
    <namespace name="WebAutomation.Core.WebObjects.WebComponents.WebElementProviders" />
    <namespace name="WebAutomation.Core.WebObjects.WebContainer.Activities" />
    <namespace name="QualityExcites.Tests.Common" />
    
    <container>
      <register type="ILogger" mapTo="ConsoleLogger" />      
      <register type="ISettings" mapTo="Settings">
        <constructor>
          <param name="presentTimeoutInMilliseconds">
            <value value="4000" />
          </param>
          <param name="notPresentTimeoutInMilliseconds">
            <value value="500" />
          </param>
          <param name="topScrollMargin">
            <value value="100" />
          </param>
          <param name="bottomScrollMargin">
            <value value="100" />
          </param>
          <param name="waitForExpectedResultAttempts">
            <value value="6" />
          </param>
          <param name="waitForExpectedResultsSleepTime">
            <value value="500" />
          </param>
        </constructor>
      </register>
      <register type="IWebObjectsManager" mapTo="WebObjectsManager" />
      <register type="IWebComponent" mapTo="WebComponent" />

      <!-- Register Web Component Operations -->
      <register type="IWebComponentAssert" mapTo="WebComponentAssert" />
      <register type="IWebComponentAssertState" mapTo="WebComponentAssertState" />
      <register type="IWebComponentAssertValue" mapTo="WebComponentAssertValue" />

      <register type="IWebComponentActions" mapTo="WebComponentActions" name="actionPerform" />
      <register type="IWebComponentActions" mapTo="WebComponentOptionalActions" name="actionPerformIfExists" />
      <register type="IWebComponentCheckState" mapTo="WebComponentCheckCurrentState" name="stateIs" />
      <register type="IWebComponentCheckState" mapTo="WebComponentCheckFutureState" name="stateWillBe" />
      <register type="IWebComponentCheckValue" mapTo="WebComponentCheckCurrentValue" name="valueHas" />
      <register type="IWebComponentCheckValue" mapTo="WebComponentCheckFutureValue" name="valueWillHave" />

      <!-- Register Web Component Actions -->
      <register type="IClearAction" mapTo="ClearAction" />
      <register type="IFillAction" mapTo="FillAction" />
      <register type="IHoverAction" mapTo="HoverAction" />
      <register type="ISelectAction" mapTo="SelectAction" />
      <register type="ICheckAction" mapTo="CheckAction" />
      <register type="IClickAction" mapTo="CustomClick" />
      <register type="IDragAndDropAction" mapTo="DragAndDropAction" />
      <register type="IScrollAction" mapTo="ScrollAction" />
      
      <!-- Register Web Element Providers-->
      <register type="IWebElementProvider" mapTo="WebElementByIdProvider" name="byId" />
      <register type="IWebElementProvider" mapTo="WebElementByPidProvider" name="byPid" />
      <register type="IWebElementProvider" mapTo="WebElementByClassProvider" name="byClass" />
      <register type="IWebElementProvider" mapTo="WebElementByPclassProvider" name="byPclass" />
      <register type="IWebElementProvider" mapTo="WebElementByCssProvider" name="byCss" />
      <register type="IWebElementProvider" mapTo="WebElementByPCssProvider" name="byPcss" />
      <register type="IWebElementProvider" mapTo="WebElementByXPathProvider" name="byXpath" />
      <register type="IWebElementProvider" mapTo="WebElementByPXPathProvider" name="byPxpath" />
      <register type="IWebElementProviderWithIframe" mapTo="WebElementProviderWithIframe" />
      
      <!-- Register activities for initializing Web Components -->
      <register type="IActivity" mapTo="CreateWebComponentsActivity" name="CreateWebComponents" />

      <!-- Register activities for finding Web Elements -->
      <register type="IActivity" mapTo="SetWebElementProviderActivity[IdAttribute]" name="id">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byId" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>

      <register type="IActivity" mapTo="SetWebElementProviderActivity[PidAttribute]" name="pid">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byPid" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>

      <register type="IActivity" mapTo="SetWebElementProviderActivity[ClassAttribute]" name="class">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byClass" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>

      <register type="IActivity" mapTo="SetWebElementProviderActivity[PclassAttribute]" name="pclass">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byPclass" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>

      <register type="IActivity" mapTo="SetWebElementProviderActivity[CssAttribute]" name="css">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byCss" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>

      <register type="IActivity" mapTo="SetWebElementProviderActivity[PcssAttribute]" name="pcss">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byPcss" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>

      <register type="IActivity" mapTo="SetWebElementProviderActivity[XpathAttribute]" name="xpath">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byXpath" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>

      <register type="IActivity" mapTo="SetWebElementProviderActivity[PxpathAttribute]" name="pxpath">
        <constructor>
          <param name="webElementProviderResolver">
            <dependency name="byPxpath" />
          </param>
          <param name="logger">
            <dependency type="ILogger" />
          </param>
        </constructor>
      </register>
      
      <!-- Register activity which enable finding Web Elements inside iframes -->
      <register type="IActivity" mapTo="UpdateProvidersForIframesActivity" name="iframe" />
      
      <!-- Register other activities which will be executed during loading a WebContainer (order is important!) -->
      <!-- You can register here your own custom activities (remember to define the 'name' attribute -->
      <register type="IActivity" mapTo="AssertNotPresentActivity" name="assertNotPresent" />
      <register type="IActivity" mapTo="AssertPresentActivity" name="assertPresent" />

    </container>

  </unity>

</configuration>